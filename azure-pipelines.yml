# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: SonarQubePrepare@4
  inputs:
    SonarQube: 'OCP Sonarqube'
    scannerMode: 'CLI'
    configMode: 'manual'
    cliProjectKey: 'javaee-cafe:javaee-cafe'
    cliSources: '.'
    extraProperties: |
      # Additional properties that will be passed to the scanner, 
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      sonar.login=admin
      sonar.password=r3dh4t1!

- task: Maven@3
  inputs:
    mavenPomFile: 'postgres/pom.xml'
    publishJUnitResults: false
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.11'
    mavenVersionOption: 'Default'
    mavenOptions: '-Xmx3072m'
    mavenAuthenticateFeed: false
    effectivePomSkip: false
    sonarQubeRunAnalysis: false
#- task: CmdLine@2
#  inputs:
#    script: 'mvn sonar:sonar -Dsonar.login=432145c5ecfff704d2a3e86f86b5ed9abd84714d -f postgres/pom.xml'



- task: SonarQubeAnalyze@4

- task: oc-cmd@2
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'OCP d88b'
    cmd: 'project open-liberty-demo'

- task: oc-cmd@2
  inputs:
    connectionType: 'OpenShift Connection Service'
    openshiftService: 'OCP d88b'
    cmd: 'start-build --from-dir=${SYSTEM_DEFAULTWORKINGDIRECTORY}/postgres --follow aro-cafe-postgres'

